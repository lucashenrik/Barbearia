package com.lucas.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.lucas.models.Adminstrador;
import com.lucas.models.Barbearia;
import com.lucas.models.Barbeiro;
import com.lucas.models.EnumRoles;
import com.lucas.models.dtos.RegistrarDTO;
import com.lucas.repositories.AdministradorRepositorio;
import com.lucas.repositories.BarbeiroRepositorio;

@Service
public class AutenticacaoServico {

	@Autowired
	AdministradorRepositorio adminRepositorio;

	@Autowired
	BarbeiroRepositorio barbRepositorio;

	public void registrar(RegistrarDTO data) {

		// Codifica a senha
		String senhaEncriptada = new BCryptPasswordEncoder().encode(data.senha());

		// Cria a barbearia, se necessário
		Barbearia barbearia = null; // Defina isso conforme necessário

		EnumRoles roleRequest = data.role();

		if (roleRequest == EnumRoles.ADMIN) {
			Adminstrador admin = new Adminstrador(data.nome(), data.email(), data.telefone(), senhaEncriptada,
					data.role(), barbearia);
			this.adminRepositorio.save(admin);
		} else if (roleRequest == EnumRoles.BARBEIRO) {
			Barbeiro novoBarbeiro = new Barbeiro(data.nome(), data.email(), data.telefone(), senhaEncriptada,
					data.role(), null, barbearia);
			this.barbRepositorio.save(novoBarbeiro);
		}

	}
}
