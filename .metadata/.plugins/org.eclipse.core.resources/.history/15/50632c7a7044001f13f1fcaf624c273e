package com.lucas.controllers;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.lucas.models.dtos.BarbeiroGetDTO;
import com.lucas.services.ClienteBuscaBarbeiroServico;

@RestController
@RequestMapping(value = "/cliente/{clienteId}/barbeiros")
public class ClienteBuscaBarbeiroControler {
	
	@Autowired
	ClienteBuscaBarbeiroServico barbeiroServico;
	
	@GetMapping(value = "/buscar")
	public ResponseEntity<List<BarbeiroGetDTO>> findAll(){
		List<BarbeiroGetDTO> barbeiros = barbeiroServico.findAll();
		return new ResponseEntity<>(barbeiros, HttpStatus.OK);
	}
	
	// Endpoint para redirecionar para os atendimentos ap√≥s o cliente escolher um barbeiro
    @GetMapping("/{barbeiroId}/atendimentos")
    public ResponseEntity<Void> redirectToAtendimentos(@PathVariable Long clienteId, @PathVariable Long barbeiroId) {
        URI location = ServletUriComponentsBuilder.fromCurrentContextPath()
                .path("/cliente/{clienteId}/{barbeiroId}/atendimentos")
                .buildAndExpand(clienteId, barbeiroId)
                .toUri();
        return ResponseEntity.seeOther(location).build();
}
