package com.lucas.controllers;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.lucas.models.dtos.BarbeiroGetDTO;
import com.lucas.services.ClienteBuscaBarbeiroServico;

@RestController
@RequestMapping(value = "/cliente/{clienteId}/barbeiros")
public class ClienteBuscaBarbeiroControler {
	
	@Autowired
	ClienteBuscaBarbeiroServico barbeiroServico;
	
	@GetMapping
	public ResponseEntity<List<BarbeiroGetDTO>> findAll(){
		List<BarbeiroGetDTO> barbeiros = barbeiroServico.findAll();
		return new ResponseEntity<>(barbeiros, HttpStatus.OK);
	}
	
	// Endpoint para selecionar um barbeiro
	public ResponseEntity<Void> selecionarBarbeiro(
            @PathVariable Long clienteId,
            @RequestParam Long barbeiroId) {
        // Aqui você pode processar a seleção do barbeiro, por exemplo, armazenar em sessão ou fazer outras operações necessárias

        // Redireciona para o endpoint de atendimentos do barbeiro selecionado
    	 URI location = ServletUriComponentsBuilder.fromCurrentRequest()
                 .replacePath("/cliente/{id}/barbeiros/{barbeiroId}/atendimentos")
                 .buildAndExpand(barbeiroId)
                 .toUri();
         
         return ResponseEntity.created(location).build();
    }
}
