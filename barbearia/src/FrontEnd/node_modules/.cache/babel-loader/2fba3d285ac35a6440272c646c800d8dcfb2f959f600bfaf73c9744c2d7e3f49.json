{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\estudos\\\\react\\\\crud\\\\backend\\\\frontend\\\\src\\\\components\\\\atendimentos\\\\update\\\\AtualizarAtendimento.jsx\",\n  _s = $RefreshSig$();\n// src/components/AtualizarAtendimento.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Modal from '../../Modal.jsx';\nimport styles from './AtualizarAtendimento.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateAtendimento = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [atendimento, setAtendimento] = useState({});\n  const [horario, setHorario] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false); // Corrigido para isModalOpen\n\n  useEffect(() => {\n    axios.get(`/atendimento/${id}`).then(response => {\n      setAtendimento(response.data);\n      setHorario(response.data.horario);\n    }).catch(error => console.error('Erro ao buscar atendimento:', error));\n  }, [id]);\n  const handleSubmit = () => {\n    console.log('Submetendo atualização do atendimento'); // Log para depuração\n    axios.put('/atendimento/atualizar', {\n      id,\n      horario\n    }).then(response => {\n      alert('Atendimento atualizado com sucesso');\n      setIsModalOpen(false); // Corrigido para setIsModalOpen\n    }).catch(error => console.error('Erro ao atualizar atendimento:', error));\n  };\n  const handleOpen = () => {\n    console.log('Abrindo modal'); // Log para depuração\n    setIsModalOpen(true); // Corrigido para setIsModalOpen\n  };\n  const handleClose = () => {\n    console.log('Fechando modal'); // Log para depuração\n    setIsModalOpen(false); // Corrigido para setIsModalOpen\n  };\n  console.log('Estado do modal:', isModalOpen); // Log para verificar o estado do modal\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpen,\n      children: \"Abrir Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Atualizar Atendimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Hor\\xE1rio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: horario,\n          onChange: e => setHorario(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Atualizar Atendimento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateAtendimento, \"6i+K9wkCvsE8biIQwBGVWdMWk/g=\", false, function () {\n  return [useParams];\n});\n_c = UpdateAtendimento;\nexport default UpdateAtendimento;\nvar _c;\n$RefreshReg$(_c, \"UpdateAtendimento\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Modal","styles","jsxDEV","_jsxDEV","UpdateAtendimento","_s","id","atendimento","setAtendimento","horario","setHorario","isModalOpen","setIsModalOpen","get","then","response","data","catch","error","console","handleSubmit","log","put","alert","handleOpen","handleClose","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","className","formContainer","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Lucas/Documents/estudos/react/crud/backend/frontend/src/components/atendimentos/update/AtualizarAtendimento.jsx"],"sourcesContent":["// src/components/AtualizarAtendimento.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Modal from '../../Modal.jsx';\r\nimport styles from './AtualizarAtendimento.module.css';\r\n\r\nconst UpdateAtendimento = () => {\r\n  const { id } = useParams();\r\n  const [atendimento, setAtendimento] = useState({});\r\n  const [horario, setHorario] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Corrigido para isModalOpen\r\n\r\n  useEffect(() => {\r\n    axios.get(`/atendimento/${id}`)\r\n      .then(response => {\r\n        setAtendimento(response.data);\r\n        setHorario(response.data.horario);\r\n      })\r\n      .catch(error => console.error('Erro ao buscar atendimento:', error));\r\n  }, [id]);\r\n\r\n  const handleSubmit = () => {\r\n    console.log('Submetendo atualização do atendimento'); // Log para depuração\r\n    axios.put('/atendimento/atualizar', {\r\n      id,\r\n      horario\r\n    })\r\n      .then(response => {\r\n        alert('Atendimento atualizado com sucesso');\r\n        setIsModalOpen(false); // Corrigido para setIsModalOpen\r\n      })\r\n      .catch(error => console.error('Erro ao atualizar atendimento:', error));\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    console.log('Abrindo modal'); // Log para depuração\r\n    setIsModalOpen(true); // Corrigido para setIsModalOpen\r\n  };\r\n\r\n  const handleClose = () => {\r\n    console.log('Fechando modal'); // Log para depuração\r\n    setIsModalOpen(false); // Corrigido para setIsModalOpen\r\n  };\r\n\r\n  console.log('Estado do modal:', isModalOpen); // Log para verificar o estado do modal\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleOpen}>Abrir Modal</button> {/* Adicione um botão para abrir o modal */}\r\n      <Modal isOpen={isModalOpen} onClose={handleClose}>\r\n        <h2>Atualizar Atendimento</h2>\r\n        <div className={styles.formContainer}>\r\n          <label>Horário:</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={horario}\r\n            onChange={(e) => setHorario(e.target.value)}\r\n          />\r\n          <button onClick={handleSubmit}>Atualizar Atendimento</button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateAtendimento;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}