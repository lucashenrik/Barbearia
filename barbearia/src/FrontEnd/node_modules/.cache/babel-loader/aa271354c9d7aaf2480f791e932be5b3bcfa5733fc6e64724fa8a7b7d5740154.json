{"ast":null,"code":"var _jsxFileName = \"D:\\\\estudos\\\\react\\\\crud\\\\backend\\\\frontend\\\\src\\\\components\\\\barbeiro\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport atendimentoStyles from 'C:/Users/Lucas/Documents/estudos/react/crud/backend/frontend/src/components/cliente/atendimentos/AtendimentosList.module.css';\r\n\r\nconst HomePage = () => {\r\n  const [atendimentos, setAtendimentos] = useState([]);\r\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\r\n  const [barbeiroId, setBarbeiroId] = useState(1); // Substitua pelo ID real do barbeiro logado*/\n\n/*useEffect(() => {\r\n    const fetchAtendimentos = async () => {\r\n        try {\r\n            const response = await axios.get(`/home?barbeiroId=${barbeiroId}`);\r\n            setAtendimentos(response.data);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar atendimentos', error);\r\n        }\r\n    };\r\n    \r\n    const fetchHorarios = async () => {\r\n        try {\r\n            const response = await axios.get(`/home/horarios?barbeiroId=${barbeiroId}&data=${new Date().toISOString()}`);\r\n            setHorariosDisponiveis(response.data);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar horários', error);\r\n        }\r\n    };\r\n*/\n\n/*useEffect(() => {\r\n  // Simular um atendimento fictício para testes com todos os dados necessários\r\n  setAtendimentos([\r\n    {\r\n      id: 1,\r\n      clienteNome: 'Carlos',\r\n      barbeiroNome: 'João',\r\n      servicos: ['Corte de cabelo', 'Barba'],\r\n      horario: '10:00 08/10/2024',\r\n      valor: 50.00,\r\n    },\r\n    {\r\n      id: 2,\r\n      clienteNome: 'Ana',\r\n      barbeiroNome: 'Maria',\r\n      servicos: ['Tintura', 'Corte de cabelo'],\r\n      horario: '11:00 09/10/2024',\r\n      valor: 80.00,\r\n    }\r\n  ]);\r\n\r\n  const fetchHorarios = async () => {\r\n    try {\r\n      const response = await axios.get(`/home/horarios?barbeiroId=${barbeiroId}&data=${new Date().toISOString()}`);\r\n      setHorariosDisponiveis(response.data);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar horários', error);\r\n    }\r\n  };\r\n\r\n  fetchHorarios();\r\n}, [barbeiroId]);\r\n\r\nreturn (\r\n  <div className={atendimentoStyles.container}>\r\n    <div className={atendimentoStyles.main}>\r\n      <h1>Página Inicial</h1>\r\n\r\n      <h2>Atendimentos</h2>\r\n\r\n      <div className={atendimentoStyles.box}>\r\n        <ul>\r\n          {atendimentos.map(atendimento => (\r\n            <li key={atendimento.id} className={atendimentoStyles.listItem}>\r\n              <div className={atendimentoStyles.details}>\r\n\r\n                <div className={atendimentoStyles.horario}>\r\n                  <span className={atendimentoStyles.label}>{atendimento.horario}</span>\r\n                </div>\r\n\r\n                <div className={atendimentoStyles.barbeiroNome}>\r\n                  <span className={atendimentoStyles.label}>{atendimento.barbeiroNome}</span>\r\n                </div>\r\n\r\n                <div className={atendimentoStyles.servicos}>\r\n                  <span className={atendimentoStyles.nome}>{atendimento.servicos.join(', ')}</span>\r\n                </div>\r\n\r\n                <div className={atendimentoStyles.valor}>\r\n                  <span className={atendimentoStyles.label}>Valor: R$  </span>\r\n                  <span className={atendimentoStyles.nome}>{atendimento.valor.toFixed(2)}</span>\r\n                </div>\r\n              </div>\r\n              <div className={atendimentoStyles.buttonContainer}>\r\n                <Link to={`/atualizar-atendimento/${atendimento.id}`}>\r\n                  <button className={atendimentoStyles.buttonUpdate}>\r\n                    Atualizar\r\n                  </button>\r\n                </Link>\r\n                <Link to={`/cancelar-atendimento/${atendimento.id}`}>\r\n                  <button className={atendimentoStyles.buttonDelete}>\r\n                    Cancelar\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <h2>Horários Disponíveis</h2>\r\n      <ul>\r\n        {horariosDisponiveis.map((hora, index) => (\r\n          <li key={index}>{hora}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <Link to=\"/criar-horario\">\r\n        <button>Criar Novo Horário</button>\r\n      </Link>\r\n\r\n      <Link to=\"/atualizar-horario\">\r\n        <button>Atualizar Horário</button>\r\n      </Link>\r\n\r\n      <Link to=\"/servicos\">\r\n        <button>Ver Serviços</button>\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default HomePage;*/\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport atendimentoStyles from './HomePage.module.css';\n\n/*const HomePage = () => {\r\n  const [atendimentos, setAtendimentos] = useState([]);\r\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\r\n  const [barbeiroId, setBarbeiroId] = useState(1); // Substitua pelo ID real do barbeiro logado\r\n\r\n  useEffect(() => {\r\n    // Simular um atendimento fictício para testes com todos os dados necessários\r\n    setAtendimentos([\r\n      {\r\n        id: 1,\r\n        clienteNome: 'Carlos',\r\n        barbeiroNome: 'João',\r\n        servicos: ['Corte de cabelo', 'Barba'],\r\n        horario: '10:00 08/10/2024',\r\n        valor: 50.00,\r\n      },\r\n      {\r\n        id: 2,\r\n        clienteNome: 'Ana',\r\n        barbeiroNome: 'Maria',\r\n        servicos: ['Tintura', 'Corte de cabelo'],\r\n        horario: '11:00 09/10/2024',\r\n        valor: 80.00,\r\n      }\r\n    ]);\r\n\r\n    // Simular horários fictícios para testes\r\n    setHorariosDisponiveis([\r\n      '09:00',\r\n      '10:00',\r\n      '11:00',\r\n      '12:00',\r\n      '14:00',\r\n      '15:00',\r\n      '16:00',\r\n      '17:00',\r\n      '18:00',\r\n      '19:00',\r\n      '20:00',\r\n      '21:00',\r\n    ]);\r\n\r\n  }, [barbeiroId]);\r\n\r\n  return (\r\n    <div className={atendimentoStyles.container}>\r\n      <div className={atendimentoStyles.main}>\r\n        <h1>Página Inicial</h1>\r\n\r\n        <h2>Atendimentos</h2>\r\n\r\n        <div className={atendimentoStyles.box}>\r\n          <ul>\r\n            {atendimentos.map(atendimento => (\r\n              <li key={atendimento.id} className={atendimentoStyles.listItem}>\r\n                <div className={atendimentoStyles.details}>\r\n                  <div className={atendimentoStyles.horario}>\r\n                    <span className={atendimentoStyles.label}>{atendimento.horario}</span>\r\n                  </div>\r\n                  <div className={atendimentoStyles.barbeiroNome}>\r\n                    <span className={atendimentoStyles.label}>{atendimento.barbeiroNome}</span>\r\n                  </div>\r\n                  <div className={atendimentoStyles.servicos}>\r\n                    <span className={atendimentoStyles.nome}>{atendimento.servicos.join(', ')}</span>\r\n                  </div>\r\n                  <div className={atendimentoStyles.valor}>\r\n                    <span className={atendimentoStyles.label}>Valor: R$ </span>\r\n                    <span className={atendimentoStyles.nome}>{atendimento.valor.toFixed(2)}</span>\r\n                  </div>\r\n                </div>\r\n                <div className={atendimentoStyles.buttonContainer}>\r\n                  <Link to={`/atualizar-atendimento/${atendimento.id}`}>\r\n                    <button className={atendimentoStyles.buttonUpdate}>\r\n                      Atualizar\r\n                    </button>\r\n                  </Link>\r\n                  <Link to={`/cancelar-atendimento/${atendimento.id}`}>\r\n                    <button className={atendimentoStyles.buttonDelete}>\r\n                      Cancelar\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Horários Disponíveis</h2>\r\n          <div className={atendimentoStyles.horarioContainer}>\r\n            {horariosDisponiveis.map((hora, index) => (\r\n              <div key={index} className={atendimentoStyles.horarioBarbeiro}>\r\n                <span className={atendimentoStyles.label}>{hora}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <Link to=\"/home/novo-horario\">\r\n          <button>Criar Novo Horário</button>\r\n        </Link>\r\n\r\n        <Link to=\"/atualizar-horario\">\r\n          <button>Atualizar Horário</button>\r\n        </Link>\r\n\r\n        <Link to=\"/servicos\">\r\n          <button>Ver Serviços</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CriarHorarioPage = () => {\n  _s();\n  const [diasTrabalho, setDiasTrabalho] = useState([]);\n  const [horaInicio, setHoraInicio] = useState('');\n  const [horaFim, setHoraFim] = useState('');\n  const [horaInicioAlmoco, setHoraInicioAlmoco] = useState('');\n  const [horaFimAlmoco, setHoraFimAlmoco] = useState('');\n  const [barbeiroId, setBarbeiroId] = useState(1); // Substitua pelo ID real do barbeiro logado\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/home/novo-horario', {\n        barbeiroId,\n        diasTrabalho,\n        horaInicio,\n        horaFim,\n        horaInicioAlmoco,\n        horaFimAlmoco\n      });\n      navigate('/home');\n    } catch (error) {\n      console.error('Erro ao criar horário', error);\n    }\n  };\n  const diasSemana = ['Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado', 'Domingo'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Criar Novo Hor\\xE1rio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Dias da Semana:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          multiple: true,\n          onChange: e => setDiasTrabalho([...e.target.selectedOptions].map(option => option.value)),\n          value: diasTrabalho,\n          children: diasSemana.map(dia => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dia,\n            children: dia\n          }, dia, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Hora In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          onChange: e => setHoraInicio(e.target.value),\n          value: horaInicio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Hora Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          onChange: e => setHoraFim(e.target.value),\n          value: horaFim\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Hora In\\xEDcio Almo\\xE7o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          onChange: e => setHoraInicioAlmoco(e.target.value),\n          value: horaInicioAlmoco\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Hora Fim Almo\\xE7o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          onChange: e => setHoraFimAlmoco(e.target.value),\n          value: horaFimAlmoco\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(CriarHorarioPage, \"JNPxuBlwPYuv1YA7jYFbmLOf7/A=\", true);\n_c = CriarHorarioPage;\nexport default CriarHorarioPage;\nvar _c;\n$RefreshReg$(_c, \"CriarHorarioPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","atendimentoStyles","jsxDEV","_jsxDEV","CriarHorarioPage","_s","diasTrabalho","setDiasTrabalho","horaInicio","setHoraInicio","horaFim","setHoraFim","horaInicioAlmoco","setHoraInicioAlmoco","horaFimAlmoco","setHoraFimAlmoco","barbeiroId","setBarbeiroId","navigate","useNavigate","handleSubmit","e","preventDefault","post","error","console","diasSemana","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","multiple","onChange","target","selectedOptions","map","option","value","dia","type","_c","$RefreshReg$"],"sources":["D:/estudos/react/crud/backend/frontend/src/components/barbeiro/HomePage.jsx"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport atendimentoStyles from 'C:/Users/Lucas/Documents/estudos/react/crud/backend/frontend/src/components/cliente/atendimentos/AtendimentosList.module.css';\r\n\r\nconst HomePage = () => {\r\n  const [atendimentos, setAtendimentos] = useState([]);\r\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\r\n  const [barbeiroId, setBarbeiroId] = useState(1); // Substitua pelo ID real do barbeiro logado*/\r\n\r\n/*useEffect(() => {\r\n    const fetchAtendimentos = async () => {\r\n        try {\r\n            const response = await axios.get(`/home?barbeiroId=${barbeiroId}`);\r\n            setAtendimentos(response.data);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar atendimentos', error);\r\n        }\r\n    };\r\n    \r\n    const fetchHorarios = async () => {\r\n        try {\r\n            const response = await axios.get(`/home/horarios?barbeiroId=${barbeiroId}&data=${new Date().toISOString()}`);\r\n            setHorariosDisponiveis(response.data);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar horários', error);\r\n        }\r\n    };\r\n*/\r\n\r\n/*useEffect(() => {\r\n  // Simular um atendimento fictício para testes com todos os dados necessários\r\n  setAtendimentos([\r\n    {\r\n      id: 1,\r\n      clienteNome: 'Carlos',\r\n      barbeiroNome: 'João',\r\n      servicos: ['Corte de cabelo', 'Barba'],\r\n      horario: '10:00 08/10/2024',\r\n      valor: 50.00,\r\n    },\r\n    {\r\n      id: 2,\r\n      clienteNome: 'Ana',\r\n      barbeiroNome: 'Maria',\r\n      servicos: ['Tintura', 'Corte de cabelo'],\r\n      horario: '11:00 09/10/2024',\r\n      valor: 80.00,\r\n    }\r\n  ]);\r\n\r\n  const fetchHorarios = async () => {\r\n    try {\r\n      const response = await axios.get(`/home/horarios?barbeiroId=${barbeiroId}&data=${new Date().toISOString()}`);\r\n      setHorariosDisponiveis(response.data);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar horários', error);\r\n    }\r\n  };\r\n\r\n  fetchHorarios();\r\n}, [barbeiroId]);\r\n\r\nreturn (\r\n  <div className={atendimentoStyles.container}>\r\n    <div className={atendimentoStyles.main}>\r\n      <h1>Página Inicial</h1>\r\n\r\n      <h2>Atendimentos</h2>\r\n\r\n      <div className={atendimentoStyles.box}>\r\n        <ul>\r\n          {atendimentos.map(atendimento => (\r\n            <li key={atendimento.id} className={atendimentoStyles.listItem}>\r\n              <div className={atendimentoStyles.details}>\r\n\r\n                <div className={atendimentoStyles.horario}>\r\n                  <span className={atendimentoStyles.label}>{atendimento.horario}</span>\r\n                </div>\r\n\r\n                <div className={atendimentoStyles.barbeiroNome}>\r\n                  <span className={atendimentoStyles.label}>{atendimento.barbeiroNome}</span>\r\n                </div>\r\n\r\n                <div className={atendimentoStyles.servicos}>\r\n                  <span className={atendimentoStyles.nome}>{atendimento.servicos.join(', ')}</span>\r\n                </div>\r\n\r\n                <div className={atendimentoStyles.valor}>\r\n                  <span className={atendimentoStyles.label}>Valor: R$  </span>\r\n                  <span className={atendimentoStyles.nome}>{atendimento.valor.toFixed(2)}</span>\r\n                </div>\r\n              </div>\r\n              <div className={atendimentoStyles.buttonContainer}>\r\n                <Link to={`/atualizar-atendimento/${atendimento.id}`}>\r\n                  <button className={atendimentoStyles.buttonUpdate}>\r\n                    Atualizar\r\n                  </button>\r\n                </Link>\r\n                <Link to={`/cancelar-atendimento/${atendimento.id}`}>\r\n                  <button className={atendimentoStyles.buttonDelete}>\r\n                    Cancelar\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <h2>Horários Disponíveis</h2>\r\n      <ul>\r\n        {horariosDisponiveis.map((hora, index) => (\r\n          <li key={index}>{hora}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <Link to=\"/criar-horario\">\r\n        <button>Criar Novo Horário</button>\r\n      </Link>\r\n\r\n      <Link to=\"/atualizar-horario\">\r\n        <button>Atualizar Horário</button>\r\n      </Link>\r\n\r\n      <Link to=\"/servicos\">\r\n        <button>Ver Serviços</button>\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default HomePage;*/\r\n\r\nimport React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport atendimentoStyles from './HomePage.module.css';\r\n \r\n/*const HomePage = () => {\r\n  const [atendimentos, setAtendimentos] = useState([]);\r\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\r\n  const [barbeiroId, setBarbeiroId] = useState(1); // Substitua pelo ID real do barbeiro logado\r\n\r\n  useEffect(() => {\r\n    // Simular um atendimento fictício para testes com todos os dados necessários\r\n    setAtendimentos([\r\n      {\r\n        id: 1,\r\n        clienteNome: 'Carlos',\r\n        barbeiroNome: 'João',\r\n        servicos: ['Corte de cabelo', 'Barba'],\r\n        horario: '10:00 08/10/2024',\r\n        valor: 50.00,\r\n      },\r\n      {\r\n        id: 2,\r\n        clienteNome: 'Ana',\r\n        barbeiroNome: 'Maria',\r\n        servicos: ['Tintura', 'Corte de cabelo'],\r\n        horario: '11:00 09/10/2024',\r\n        valor: 80.00,\r\n      }\r\n    ]);\r\n\r\n    // Simular horários fictícios para testes\r\n    setHorariosDisponiveis([\r\n      '09:00',\r\n      '10:00',\r\n      '11:00',\r\n      '12:00',\r\n      '14:00',\r\n      '15:00',\r\n      '16:00',\r\n      '17:00',\r\n      '18:00',\r\n      '19:00',\r\n      '20:00',\r\n      '21:00',\r\n    ]);\r\n\r\n  }, [barbeiroId]);\r\n\r\n  return (\r\n    <div className={atendimentoStyles.container}>\r\n      <div className={atendimentoStyles.main}>\r\n        <h1>Página Inicial</h1>\r\n\r\n        <h2>Atendimentos</h2>\r\n\r\n        <div className={atendimentoStyles.box}>\r\n          <ul>\r\n            {atendimentos.map(atendimento => (\r\n              <li key={atendimento.id} className={atendimentoStyles.listItem}>\r\n                <div className={atendimentoStyles.details}>\r\n                  <div className={atendimentoStyles.horario}>\r\n                    <span className={atendimentoStyles.label}>{atendimento.horario}</span>\r\n                  </div>\r\n                  <div className={atendimentoStyles.barbeiroNome}>\r\n                    <span className={atendimentoStyles.label}>{atendimento.barbeiroNome}</span>\r\n                  </div>\r\n                  <div className={atendimentoStyles.servicos}>\r\n                    <span className={atendimentoStyles.nome}>{atendimento.servicos.join(', ')}</span>\r\n                  </div>\r\n                  <div className={atendimentoStyles.valor}>\r\n                    <span className={atendimentoStyles.label}>Valor: R$ </span>\r\n                    <span className={atendimentoStyles.nome}>{atendimento.valor.toFixed(2)}</span>\r\n                  </div>\r\n                </div>\r\n                <div className={atendimentoStyles.buttonContainer}>\r\n                  <Link to={`/atualizar-atendimento/${atendimento.id}`}>\r\n                    <button className={atendimentoStyles.buttonUpdate}>\r\n                      Atualizar\r\n                    </button>\r\n                  </Link>\r\n                  <Link to={`/cancelar-atendimento/${atendimento.id}`}>\r\n                    <button className={atendimentoStyles.buttonDelete}>\r\n                      Cancelar\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Horários Disponíveis</h2>\r\n          <div className={atendimentoStyles.horarioContainer}>\r\n            {horariosDisponiveis.map((hora, index) => (\r\n              <div key={index} className={atendimentoStyles.horarioBarbeiro}>\r\n                <span className={atendimentoStyles.label}>{hora}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <Link to=\"/home/novo-horario\">\r\n          <button>Criar Novo Horário</button>\r\n        </Link>\r\n\r\n        <Link to=\"/atualizar-horario\">\r\n          <button>Atualizar Horário</button>\r\n        </Link>\r\n\r\n        <Link to=\"/servicos\">\r\n          <button>Ver Serviços</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;*/\r\n\r\nconst CriarHorarioPage = () => {\r\n  const [diasTrabalho, setDiasTrabalho] = useState([]);\r\n  const [horaInicio, setHoraInicio] = useState('');\r\n  const [horaFim, setHoraFim] = useState('');\r\n  const [horaInicioAlmoco, setHoraInicioAlmoco] = useState('');\r\n  const [horaFimAlmoco, setHoraFimAlmoco] = useState('');\r\n  const [barbeiroId, setBarbeiroId] = useState(1); // Substitua pelo ID real do barbeiro logado\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/home/novo-horario', {\r\n        barbeiroId,\r\n        diasTrabalho,\r\n        horaInicio,\r\n        horaFim,\r\n        horaInicioAlmoco,\r\n        horaFimAlmoco,\r\n      });\r\n      navigate('/home');\r\n    } catch (error) {\r\n      console.error('Erro ao criar horário', error);\r\n    }\r\n  };\r\n\r\n  const diasSemana = [\r\n    'Segunda-feira',\r\n    'Terça-feira',\r\n    'Quarta-feira',\r\n    'Quinta-feira',\r\n    'Sexta-feira',\r\n    'Sábado',\r\n    'Domingo'\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Criar Novo Horário</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Dias da Semana:\r\n          <select\r\n            multiple\r\n            onChange={(e) => setDiasTrabalho([...e.target.selectedOptions].map(option => option.value))}\r\n            value={diasTrabalho}\r\n          >\r\n            {diasSemana.map(dia => (\r\n              <option key={dia} value={dia}>{dia}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Hora Início:\r\n          <input type=\"time\" onChange={(e) => setHoraInicio(e.target.value)} value={horaInicio} />\r\n        </label>\r\n        <label>\r\n          Hora Fim:\r\n          <input type=\"time\" onChange={(e) => setHoraFim(e.target.value)} value={horaFim} />\r\n        </label>\r\n        <label>\r\n          Hora Início Almoço:\r\n          <input type=\"time\" onChange={(e) => setHoraInicioAlmoco(e.target.value)} value={horaInicioAlmoco} />\r\n        </label>\r\n        <label>\r\n          Hora Fim Almoço:\r\n          <input type=\"time\" onChange={(e) => setHoraFimAlmoco(e.target.value)} value={horaFimAlmoco} />\r\n        </label>\r\n        <button type=\"submit\">Salvar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CriarHorarioPage;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}