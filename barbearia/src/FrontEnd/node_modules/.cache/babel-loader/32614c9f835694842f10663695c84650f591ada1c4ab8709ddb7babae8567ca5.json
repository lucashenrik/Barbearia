{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/atendimentos/cancelar/CancelarAtendimento.js\n/*import React, { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst CancelarAtendimento = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const query = new URLSearchParams(location.search);\r\n  const id = query.get('id');\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios.delete(`/atendimento/cancelar?id=${id}`)\r\n        .then(response => {\r\n          alert('Atendimento cancelado com sucesso');\r\n          navigate('/atendimento'); // Redireciona para a lista de atendimentos\r\n        })\r\n        .catch(error => console.error('Erro ao cancelar atendimento:', error));\r\n    }\r\n  }, [id, navigate]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Cancelando atendimento...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CancelarAtendimento;*/\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // Adicione useParams aqui\nimport styles from './CancelarAtendimento.module.css';\nconst CancelarAtendimento = () => {\n  _s();\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Adicione esta linha\n\n  const handleCancel = () => {\n    // Simulação da lógica de cancelamento\n    console.log(`Atendimento ${id} cancelado com sucesso`);\n\n    // Simulação de redirecionamento\n    navigate('/atendimento');\n  };\n\n  /*return (\r\n      <div className={styles.container}>\r\n          {showConfirmation ? (\r\n              <div className={styles.confirmationPopup}>\r\n              <p>Você tem certeza que deseja cancelar este atendimento?</p>\r\n                <button\r\n                  className={styles.confirmButton}\r\n                  onClick={() => {\r\n                      handleCancel();\r\n                      setShowConfirmation(false);\r\n                  }}\r\n              >\r\n                  Sim\r\n              </button>\r\n              <button\r\n                  className={styles.cancelButton}\r\n                  onClick={() => setShowConfirmation(false)}\r\n              >\r\n                  Não\r\n              </button>\r\n          </div>\r\n            ) /*: (\r\n          <div className={styles.buttonContainer}>\r\n              <button\r\n                  className={styles.buttonDelete}\r\n                  onClick={() => setShowConfirmation(true)}\r\n              >\r\n                  Cancelar\r\n              </button>\r\n          </div>\r\n          )}\r\n      </div>\r\n  );*/\n};\n_s(CancelarAtendimento, \"UVeu0cwjVR1IjnqdpZogMLdpAOo=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CancelarAtendimento;\nexport default CancelarAtendimento;\nvar _c;\n$RefreshReg$(_c, \"CancelarAtendimento\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","styles","CancelarAtendimento","_s","showConfirmation","setShowConfirmation","navigate","id","handleCancel","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Lucas/Documents/estudos/react/crud/backend/frontend/src/components/atendimentos/cancelar/CancelarAtendimento.jsx"],"sourcesContent":["// src/components/atendimentos/cancelar/CancelarAtendimento.js\r\n/*import React, { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst CancelarAtendimento = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const query = new URLSearchParams(location.search);\r\n  const id = query.get('id');\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      axios.delete(`/atendimento/cancelar?id=${id}`)\r\n        .then(response => {\r\n          alert('Atendimento cancelado com sucesso');\r\n          navigate('/atendimento'); // Redireciona para a lista de atendimentos\r\n        })\r\n        .catch(error => console.error('Erro ao cancelar atendimento:', error));\r\n    }\r\n  }, [id, navigate]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Cancelando atendimento...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CancelarAtendimento;*/\r\nimport React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // Adicione useParams aqui\r\nimport styles from './CancelarAtendimento.module.css';\r\n\r\nconst CancelarAtendimento = () => {\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams(); // Adicione esta linha\r\n\r\n    const handleCancel = () => {\r\n        // Simulação da lógica de cancelamento\r\n        console.log(`Atendimento ${id} cancelado com sucesso`);\r\n\r\n        // Simulação de redirecionamento\r\n        navigate('/atendimento');\r\n    };\r\n\r\n    /*return (\r\n        <div className={styles.container}>\r\n            {showConfirmation ? (\r\n                <div className={styles.confirmationPopup}>\r\n                <p>Você tem certeza que deseja cancelar este atendimento?</p>\r\n\r\n                <button\r\n                    className={styles.confirmButton}\r\n                    onClick={() => {\r\n                        handleCancel();\r\n                        setShowConfirmation(false);\r\n                    }}\r\n                >\r\n                    Sim\r\n                </button>\r\n                <button\r\n                    className={styles.cancelButton}\r\n                    onClick={() => setShowConfirmation(false)}\r\n                >\r\n                    Não\r\n                </button>\r\n            </div>\r\n\r\n            ) /*: (\r\n            <div className={styles.buttonContainer}>\r\n                <button\r\n                    className={styles.buttonDelete}\r\n                    onClick={() => setShowConfirmation(true)}\r\n                >\r\n                    Cancelar\r\n                </button>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );*/\r\n};\r\n\r\nexport default CancelarAtendimento;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAC3D,OAAOC,MAAM,MAAM,kCAAkC;AAErD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMQ,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5B,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACvB;IACAC,OAAO,CAACC,GAAG,CAAC,eAAeH,EAAE,wBAAwB,CAAC;;IAEtD;IACAD,QAAQ,CAAC,cAAc,CAAC;EAC5B,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,CAAC;AAACH,EAAA,CAhDID,mBAAmB;EAAA,QAEJF,WAAW,EACbD,SAAS;AAAA;AAAAY,EAAA,GAHtBT,mBAAmB;AAkDzB,eAAeA,mBAAmB;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}