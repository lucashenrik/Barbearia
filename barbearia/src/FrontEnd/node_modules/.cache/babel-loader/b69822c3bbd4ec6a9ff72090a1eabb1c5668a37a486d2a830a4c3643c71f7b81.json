{"ast":null,"code":"var _jsxFileName = \"D:\\\\estudos\\\\react\\\\crud\\\\backend\\\\frontend\\\\src\\\\components\\\\cliente\\\\atendimentos\\\\createAtend\\\\CreateAtendimento.jsx\",\n  _s = $RefreshSig$();\n/* src/components/CreateAtendimento.js */\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = () => {\r\n  const [barbeiros, setBarbeiros] = useState([]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState('');\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n    axios.get('/atendimento/barbeiros-disponiveis')\r\n      .then(response => setBarbeiros(response.data))\r\n      .catch(error => console.error(\"Erro ao buscar barbeiros:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      axios.get(`/atendimento/buscarPorIdBarbeiro?barbeiroId=${selectedBarbeiroId}`)\r\n        .then(response => setServicos(response.data))\r\n        .catch(error => console.error(\"Erro ao buscar serviços:\", error));\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length) {\r\n      const duracaoServico = 20; // Calcule a duração total dos serviços selecionados\r\n      axios.get(`/atendimento/horarios-disponiveis?barbeiroId=${selectedBarbeiroId}&data=${1 /* Data selecionada */ /*}&duracaoServico=${duracaoServico}`)\r\n                                                                                                                    .then(response => setHorarios(response.data))\r\n                                                                                                                    .catch(error => console.error(\"Erro ao buscar horários:\", error));\r\n                                                                                                                    }\r\n                                                                                                                    }, [selectedBarbeiroId, selectedServicos]);\r\n                                                                                                                    */\n\nimport React, { useState, useEffect } from 'react';\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\nimport ServicoSelector from './selectors/ServicoSelector';\nimport HorarioSelector from './selectors/HorarioSelector';\nimport styles from './CreateAtendimento.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateAtendimento = ({\n  modo,\n  atendimento\n}) => {\n  _s();\n  const [barbeiros, setBarbeiros] = useState([]);\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState((atendimento === null || atendimento === void 0 ? void 0 : atendimento.barbeiroId) || null);\n  const [servicos, setServicos] = useState([]);\n  const [selectedServicos, setSelectedServicos] = useState((atendimento === null || atendimento === void 0 ? void 0 : atendimento.servicos) || []);\n  const [horarios, setHorarios] = useState([]);\n  const [selectedHorario, setSelectedHorario] = useState((atendimento === null || atendimento === void 0 ? void 0 : atendimento.horario) || '');\n  useEffect(() => {\n    // Simulação para carregar barbeiros\n    setBarbeiros([{\n      id: 1,\n      nomeBarbeiro: 'João'\n    }, {\n      id: 2,\n      nomeBarbeiro: 'Pedro'\n    }, {\n      id: 3,\n      nomeBarbeiro: 'Lucas'\n    }]);\n  }, []);\n  useEffect(() => {\n    if (selectedBarbeiroId) {\n      // Simulação para carregar serviços com base no barbeiro selecionado\n      setServicos([{\n        id: 1,\n        nomeServico: 'Corte de Cabelo'\n      }, {\n        id: 2,\n        nomeServico: 'Barba'\n      }, {\n        id: 3,\n        nomeServico: 'Corte + Barba'\n      }]);\n    }\n  }, [selectedBarbeiroId]);\n  useEffect(() => {\n    if (selectedBarbeiroId && selectedServicos.length > 0) {\n      // Simulação para carregar horários com base no barbeiro e serviços selecionados\n      setHorarios(['09:00', '10:00', '11:00', '14:00', '15:00']);\n    }\n  }, [selectedBarbeiroId, selectedServicos]);\n  const handleCreateAtendimento = () => {\n    // Criação do atendimento\n    console.log(\"Atendimento criado com sucesso!\");\n  };\n  const showButton = selectedBarbeiroId !== null && selectedServicos.length > 0 && selectedHorario !== '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.title,\n      children: modo === 'atualizar' ? 'Alterar Atendimento' : 'Criar Atendimento'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectorContainer,\n      children: /*#__PURE__*/_jsxDEV(BarbeiroSelector, {\n        barbeiros: barbeiros,\n        selectedBarbeiroId: selectedBarbeiroId,\n        onSelect: setSelectedBarbeiroId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), selectedBarbeiroId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectorContainer,\n      children: /*#__PURE__*/_jsxDEV(ServicoSelector, {\n        servicos: servicos,\n        selectedServicos: selectedServicos,\n        onSelect: setSelectedServicos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), selectedServicos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectorContainer,\n      children: /*#__PURE__*/_jsxDEV(HorarioSelector, {\n        horarios: horarios,\n        selectedHorario: selectedHorario,\n        onSelect: setSelectedHorario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), showButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: handleCreateAtendimento,\n      children: modo === 'atualizar' ? 'Atualizar Atendimento' : 'Criar Agendamento'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateAtendimento, \"woRHVmRYl+b998SocXyJxuVVSz0=\");\n_c = CreateAtendimento;\nexport default CreateAtendimento;\nvar _c;\n$RefreshReg$(_c, \"CreateAtendimento\");","map":{"version":3,"names":["React","useState","useEffect","BarbeiroSelector","ServicoSelector","HorarioSelector","styles","jsxDEV","_jsxDEV","CreateAtendimento","modo","atendimento","_s","barbeiros","setBarbeiros","selectedBarbeiroId","setSelectedBarbeiroId","barbeiroId","servicos","setServicos","selectedServicos","setSelectedServicos","horarios","setHorarios","selectedHorario","setSelectedHorario","horario","id","nomeBarbeiro","nomeServico","length","handleCreateAtendimento","console","log","showButton","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","selectorContainer","onSelect","button","onClick","_c","$RefreshReg$"],"sources":["D:/estudos/react/crud/backend/frontend/src/components/cliente/atendimentos/createAtend/CreateAtendimento.jsx"],"sourcesContent":["/* src/components/CreateAtendimento.js */\r\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = () => {\r\n  const [barbeiros, setBarbeiros] = useState([]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState('');\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n    axios.get('/atendimento/barbeiros-disponiveis')\r\n      .then(response => setBarbeiros(response.data))\r\n      .catch(error => console.error(\"Erro ao buscar barbeiros:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      axios.get(`/atendimento/buscarPorIdBarbeiro?barbeiroId=${selectedBarbeiroId}`)\r\n        .then(response => setServicos(response.data))\r\n        .catch(error => console.error(\"Erro ao buscar serviços:\", error));\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length) {\r\n      const duracaoServico = 20; // Calcule a duração total dos serviços selecionados\r\n      axios.get(`/atendimento/horarios-disponiveis?barbeiroId=${selectedBarbeiroId}&data=${1 /* Data selecionada *//*}&duracaoServico=${duracaoServico}`)\r\n  .then(response => setHorarios(response.data))\r\n  .catch(error => console.error(\"Erro ao buscar horários:\", error));\r\n}\r\n}, [selectedBarbeiroId, selectedServicos]);\r\n*/\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = ({ modo, atendimento }) => {\r\n  const [barbeiros, setBarbeiros] = useState([]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(atendimento?.barbeiroId || null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState(atendimento?.servicos || []);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState(atendimento?.horario || '');\r\n\r\n  useEffect(() => {\r\n    // Simulação para carregar barbeiros\r\n    setBarbeiros([\r\n      { id: 1, nomeBarbeiro: 'João' },\r\n      { id: 2, nomeBarbeiro: 'Pedro' },\r\n      { id: 3, nomeBarbeiro: 'Lucas' }\r\n    ]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      // Simulação para carregar serviços com base no barbeiro selecionado\r\n      setServicos([\r\n        { id: 1, nomeServico: 'Corte de Cabelo' },\r\n        { id: 2, nomeServico: 'Barba' },\r\n        { id: 3, nomeServico: 'Corte + Barba' }\r\n      ]);\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length > 0) {\r\n      // Simulação para carregar horários com base no barbeiro e serviços selecionados\r\n      setHorarios(['09:00', '10:00', '11:00', '14:00', '15:00']);\r\n    }\r\n  }, [selectedBarbeiroId, selectedServicos]);\r\n\r\n  const handleCreateAtendimento = () => {\r\n    // Criação do atendimento\r\n    console.log(\"Atendimento criado com sucesso!\");\r\n  };\r\n\r\n  const showButton = selectedBarbeiroId !== null &&\r\n    selectedServicos.length > 0 &&\r\n    selectedHorario !== '';\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.title}>\r\n        {modo === 'atualizar' ? 'Alterar Atendimento' : 'Criar Atendimento'}\r\n      </p>\r\n\r\n      <div className={styles.selectorContainer}>\r\n        <BarbeiroSelector\r\n          barbeiros={barbeiros}\r\n          selectedBarbeiroId={selectedBarbeiroId}\r\n          onSelect={setSelectedBarbeiroId}\r\n        />\r\n      </div>\r\n\r\n      {selectedBarbeiroId && (\r\n        <div className={styles.selectorContainer}>\r\n          <ServicoSelector\r\n            servicos={servicos}\r\n            selectedServicos={selectedServicos}\r\n            onSelect={setSelectedServicos}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {selectedServicos.length > 0 && (\r\n        <div className={styles.selectorContainer}>\r\n          <HorarioSelector\r\n            horarios={horarios}\r\n            selectedHorario={selectedHorario}\r\n            onSelect={setSelectedHorario}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {showButton && (\r\n        <button className={styles.button} onClick={handleCreateAtendimento}>\r\n          {modo === 'atualizar' ? 'Atualizar Atendimento' : 'Criar Agendamento'}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAtendimento;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}