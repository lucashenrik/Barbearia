{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\Projetos\\\\pro\\\\barbearia\\\\src\\\\FrontEnd\\\\src\\\\components\\\\cliente\\\\atendimentos\\\\createAtend\\\\CreateAtendimento.jsx\",\n  _s = $RefreshSig$();\n/* src/components/CreateAtendimento.js */\n/*\n  useEffect(() => {\n    axios.get('/atendimento/barbeiros-disponiveis')\n      .then(response => setBarbeiros(response.data))\n      .catch(error => console.error(\"Erro ao buscar barbeiros:\", error));\n  }, []);\n\n  useEffect(() => {\n    if (selectedBarbeiroId) {\n      axios.get(`/atendimento/buscarPorIdBarbeiro?barbeiroId=${selectedBarbeiroId}`)\n        .then(response => setServicos(response.data))\n        .catch(error => console.error(\"Erro ao buscar serviços:\", error));\n    }\n  }, [selectedBarbeiroId]);\n\n  useEffect(() => {\n    if (selectedBarbeiroId && selectedServicos.length) {\n      const duracaoServico = 20; // Calcule a duração total dos serviços selecionados\n      axios.get(`/atendimento/horarios-disponiveis?barbeiroId=${selectedBarbeiroId}&data=${1 /* Data selecionada */ /*}&duracaoServico=${duracaoServico}`)\n                                                                                                                    .then(response => setHorarios(response.data))\n                                                                                                                    .catch(error => console.error(\"Erro ao buscar horários:\", error));\n                                                                                                                    }\n                                                                                                                    }, [selectedBarbeiroId, selectedServicos]);\n                                                                                                                    */\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\nimport ServicoSelector from './selectors/ServicoSelector';\nimport HorarioSelector from './selectors/HorarioSelector';\nimport styles from './CreateAtendimento.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateAtendimento = ({\n  modo,\n  atendimento\n}) => {\n  _s();\n  const [barbeiros, setBarbeiros] = useState([]);\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState((atendimento === null || atendimento === void 0 ? void 0 : atendimento.barbeiroId) || null);\n  const [servicos, setServicos] = useState([]);\n  const [selectedServicos, setSelectedServicos] = useState((atendimento === null || atendimento === void 0 ? void 0 : atendimento.servicos) || []);\n  const [horarios, setHorarios] = useState([]);\n  const [selectedHorario, setSelectedHorario] = useState((atendimento === null || atendimento === void 0 ? void 0 : atendimento.horario) || '');\n  useEffect(() => {\n    // Simulação para carregar barbeiros\n    setBarbeiros([{\n      id: 1,\n      nomeBarbeiro: 'João'\n    }, {\n      id: 2,\n      nomeBarbeiro: 'Pedro'\n    }, {\n      id: 3,\n      nomeBarbeiro: 'Lucas'\n    }]);\n  }, []);\n  useEffect(() => {\n    if (selectedBarbeiroId) {\n      // Simulação para carregar serviços com base no barbeiro selecionado\n      setServicos([{\n        id: 1,\n        nomeServico: 'Corte de Cabelo'\n      }, {\n        id: 2,\n        nomeServico: 'Barba'\n      }, {\n        id: 3,\n        nomeServico: 'Corte + Barba'\n      }]);\n    }\n  }, [selectedBarbeiroId]);\n  useEffect(() => {\n    if (selectedBarbeiroId && selectedServicos.length > 0) {\n      // Simulação para carregar horários com base no barbeiro e serviços selecionados\n      setHorarios(['09:00', '10:00', '11:00', '14:00', '15:00']);\n    }\n  }, [selectedBarbeiroId, selectedServicos]);\n  const handleCreateAtendimento = () => {\n    // Criação do atendimento\n    console.log(\"Atendimento criado com sucesso!\");\n  };\n  const showButton = selectedBarbeiroId !== null && selectedServicos.length > 0 && selectedHorario !== '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.title,\n      children: modo === 'atualizar' ? 'Alterar Atendimento' : 'Criar Atendimento'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectorContainer,\n      children: /*#__PURE__*/_jsxDEV(BarbeiroSelector, {\n        barbeiros: barbeiros,\n        selectedBarbeiroId: selectedBarbeiroId,\n        onSelect: setSelectedBarbeiroId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), selectedBarbeiroId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectorContainer,\n      children: /*#__PURE__*/_jsxDEV(ServicoSelector, {\n        servicos: servicos,\n        selectedServicos: selectedServicos,\n        onSelect: setSelectedServicos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), selectedServicos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectorContainer,\n      children: /*#__PURE__*/_jsxDEV(HorarioSelector, {\n        horarios: horarios,\n        selectedHorario: selectedHorario,\n        onSelect: setSelectedHorario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/atendimento\",\n      children: showButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: handleCreateAtendimento,\n        children: modo === 'atualizar' ? 'Atualizar Atendimento' : 'Criar Agendamento'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateAtendimento, \"woRHVmRYl+b998SocXyJxuVVSz0=\");\n_c = CreateAtendimento;\nexport default CreateAtendimento;\nvar _c;\n$RefreshReg$(_c, \"CreateAtendimento\");","map":{"version":3,"names":["React","useState","useEffect","Link","BarbeiroSelector","ServicoSelector","HorarioSelector","styles","jsxDEV","_jsxDEV","CreateAtendimento","modo","atendimento","_s","barbeiros","setBarbeiros","selectedBarbeiroId","setSelectedBarbeiroId","barbeiroId","servicos","setServicos","selectedServicos","setSelectedServicos","horarios","setHorarios","selectedHorario","setSelectedHorario","horario","id","nomeBarbeiro","nomeServico","length","handleCreateAtendimento","console","log","showButton","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","selectorContainer","onSelect","to","button","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lucas/Documents/Projetos/pro/barbearia/src/FrontEnd/src/components/cliente/atendimentos/createAtend/CreateAtendimento.jsx"],"sourcesContent":["/* src/components/CreateAtendimento.js */\n/*\n  useEffect(() => {\n    axios.get('/atendimento/barbeiros-disponiveis')\n      .then(response => setBarbeiros(response.data))\n      .catch(error => console.error(\"Erro ao buscar barbeiros:\", error));\n  }, []);\n\n  useEffect(() => {\n    if (selectedBarbeiroId) {\n      axios.get(`/atendimento/buscarPorIdBarbeiro?barbeiroId=${selectedBarbeiroId}`)\n        .then(response => setServicos(response.data))\n        .catch(error => console.error(\"Erro ao buscar serviços:\", error));\n    }\n  }, [selectedBarbeiroId]);\n\n  useEffect(() => {\n    if (selectedBarbeiroId && selectedServicos.length) {\n      const duracaoServico = 20; // Calcule a duração total dos serviços selecionados\n      axios.get(`/atendimento/horarios-disponiveis?barbeiroId=${selectedBarbeiroId}&data=${1 /* Data selecionada *//*}&duracaoServico=${duracaoServico}`)\n  .then(response => setHorarios(response.data))\n  .catch(error => console.error(\"Erro ao buscar horários:\", error));\n}\n}, [selectedBarbeiroId, selectedServicos]);\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\nimport ServicoSelector from './selectors/ServicoSelector';\nimport HorarioSelector from './selectors/HorarioSelector';\nimport styles from './CreateAtendimento.module.css';\n\nconst CreateAtendimento = ({ modo, atendimento }) => {\n  const [barbeiros, setBarbeiros] = useState([]);\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(atendimento?.barbeiroId || null);\n  const [servicos, setServicos] = useState([]);\n  const [selectedServicos, setSelectedServicos] = useState(atendimento?.servicos || []);\n  const [horarios, setHorarios] = useState([]);\n  const [selectedHorario, setSelectedHorario] = useState(atendimento?.horario || '');\n\n  useEffect(() => {\n    // Simulação para carregar barbeiros\n    setBarbeiros([\n      { id: 1, nomeBarbeiro: 'João' },\n      { id: 2, nomeBarbeiro: 'Pedro' },\n      { id: 3, nomeBarbeiro: 'Lucas' }\n    ]);\n  }, []);\n\n  useEffect(() => {\n    if (selectedBarbeiroId) {\n      // Simulação para carregar serviços com base no barbeiro selecionado\n      setServicos([\n        { id: 1, nomeServico: 'Corte de Cabelo' },\n        { id: 2, nomeServico: 'Barba' },\n        { id: 3, nomeServico: 'Corte + Barba' }\n      ]);\n    }\n  }, [selectedBarbeiroId]);\n\n  useEffect(() => {\n    if (selectedBarbeiroId && selectedServicos.length > 0) {\n      // Simulação para carregar horários com base no barbeiro e serviços selecionados\n      setHorarios(['09:00', '10:00', '11:00', '14:00', '15:00']);\n    }\n  }, [selectedBarbeiroId, selectedServicos]);\n\n  const handleCreateAtendimento = () => {\n    // Criação do atendimento\n    console.log(\"Atendimento criado com sucesso!\");\n  };\n\n  const showButton = selectedBarbeiroId !== null &&\n    selectedServicos.length > 0 &&\n    selectedHorario !== '';\n\n  return (\n    <div className={styles.container}>\n      <p className={styles.title}>\n        {modo === 'atualizar' ? 'Alterar Atendimento' : 'Criar Atendimento'}\n      </p>\n\n      <div className={styles.selectorContainer}>\n        <BarbeiroSelector\n          barbeiros={barbeiros}\n          selectedBarbeiroId={selectedBarbeiroId}\n          onSelect={setSelectedBarbeiroId}\n        />\n      </div>\n\n      {selectedBarbeiroId && (\n        <div className={styles.selectorContainer}>\n          <ServicoSelector\n            servicos={servicos}\n            selectedServicos={selectedServicos}\n            onSelect={setSelectedServicos}\n          />\n        </div>\n      )}\n\n      {selectedServicos.length > 0 && (\n        <div className={styles.selectorContainer}>\n          <HorarioSelector\n            horarios={horarios}\n            selectedHorario={selectedHorario}\n            onSelect={setSelectedHorario}\n          />\n        </div>\n      )}\n\n      <Link to=\"/atendimento\">\n      {showButton && (\n        <button className={styles.button} onClick={handleCreateAtendimento}>\n          {modo === 'atualizar' ? 'Atualizar Atendimento' : 'Criar Agendamento'}\n        </button>\n      )}\n      </Link>\n    </div>\n  );\n};\n\nexport default CreateAtendimento;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}