{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\estudos\\\\react\\\\crud\\\\backend\\\\frontend\\\\src\\\\components\\\\atendimentos\\\\createAtend\\\\CreateAtendimento.jsx\",\n  _s = $RefreshSig$();\n/* src/components/CreateAtendimento.js */\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = () => {\r\n  const [barbeiros, setBarbeiros] = useState([]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState('');\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n    axios.get('/atendimento/barbeiros-disponiveis')\r\n      .then(response => setBarbeiros(response.data))\r\n      .catch(error => console.error(\"Erro ao buscar barbeiros:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      axios.get(`/atendimento/buscarPorIdBarbeiro?barbeiroId=${selectedBarbeiroId}`)\r\n        .then(response => setServicos(response.data))\r\n        .catch(error => console.error(\"Erro ao buscar serviços:\", error));\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length) {\r\n      const duracaoServico = 20; // Calcule a duração total dos serviços selecionados\r\n      axios.get(`/atendimento/horarios-disponiveis?barbeiroId=${selectedBarbeiroId}&data=${1 /* Data selecionada */ /*}&duracaoServico=${duracaoServico}`)\r\n                                                                                                                    .then(response => setHorarios(response.data))\r\n                                                                                                                    .catch(error => console.error(\"Erro ao buscar horários:\", error));\r\n                                                                                                                    }\r\n                                                                                                                    }, [selectedBarbeiroId, selectedServicos]);\r\n                                                                                                                    const handleCreateAtendimento = () => {\r\n                                                                                                                    const atendimentoData = {\r\n                                                                                                                    clienteId,\r\n                                                                                                                    barbeiroId: selectedBarbeiroId,\r\n                                                                                                                    servicos: selectedServicos,\r\n                                                                                                                    horario: selectedHorario\r\n                                                                                                                    };\r\n                                                                                                                    axios.post('/atendimento/criar', atendimentoData)\r\n                                                                                                                    .then(response => {\r\n                                                                                                                    console.log(\"Atendimento criado com sucesso!\");\r\n                                                                                                                    })\r\n                                                                                                                    .catch(error => console.error(\"Erro ao criar atendimento:\", error));\r\n                                                                                                                    };\r\n                                                                                                                    return (\r\n                                                                                                                    <div className={styles.container}>\r\n                                                                                                                    <p className={styles.title}>Criar Atendimento</p>\r\n                                                                                                                    <div className={styles.selectorContainer}>\r\n                                                                                                                    <BarbeiroSelector \r\n                                                                                                                    barbeiros={barbeiros} \r\n                                                                                                                    selectedBarbeiroId={selectedBarbeiroId} \r\n                                                                                                                    onSelect={setSelectedBarbeiroId} \r\n                                                                                                                    />\r\n                                                                                                                    <div className={styles.box}>\r\n                                                                                                                    {/* Aqui você pode adicionar qualquer conteúdo adicional relacionado aos barbeiros */ /*}\r\n                                                                                                                                                                                                          </div>\r\n                                                                                                                                                                                                          </div>\r\n                                                                                                                                                                                                          <div className={styles.selectorContainer}>\r\n                                                                                                                                                                                                          <ServicoSelector \r\n                                                                                                                                                                                                          servicos={servicos} \r\n                                                                                                                                                                                                          selectedServicos={selectedServicos} \r\n                                                                                                                                                                                                          onSelect={setSelectedServicos} \r\n                                                                                                                                                                                                          />\r\n                                                                                                                                                                                                          <div className={styles.box}>\r\n                                                                                                                                                                                                          {/* Aqui você pode adicionar qualquer conteúdo adicional relacionado aos serviços */ /*}\r\n                                                                                                                                                                                                                                                                                               </div>\r\n                                                                                                                                                                                                                                                                                               </div>\r\n                                                                                                                                                                                                                                                                                               <div className={styles.selectorContainer}>\r\n                                                                                                                                                                                                                                                                                               <HorarioSelector \r\n                                                                                                                                                                                                                                                                                               horarios={horarios} \r\n                                                                                                                                                                                                                                                                                               selectedHorario={selectedHorario} \r\n                                                                                                                                                                                                                                                                                               onSelect={setSelectedHorario} \r\n                                                                                                                                                                                                                                                                                               />\r\n                                                                                                                                                                                                                                                                                               <div className={styles.box}>\r\n                                                                                                                                                                                                                                                                                               {/* Aqui você pode adicionar qualquer conteúdo adicional relacionado aos horários */ /*}\r\n                                                                                                                                                                                                                                                                                                                                                                                    </div>\r\n                                                                                                                                                                                                                                                                                                                                                                                    </div>\r\n                                                                                                                                                                                                                                                                                                                                                                                    <button className={styles.button} onClick={handleCreateAtendimento}>Criar Agendamento</button>\r\n                                                                                                                                                                                                                                                                                                                                                                                    </div>\r\n                                                                                                                                                                                                                                                                                                                                                                                    );\r\n                                                                                                                                                                                                                                                                                                                                                                                    };\r\n                                                                                                                                                                                                                                                                                                                                                                                    export default CreateAtendimento;*/\n\n// src/components/CreateAtendimento.js\n/*import React, { useState, useEffect } from 'react';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = () => {\r\n  const [barbeiros, setBarbeiros] = useState([\r\n    { id: 1, nomeBarbeiro: 'João' },\r\n    { id: 2, nomeBarbeiro: 'Pedro' },\r\n    { id: 3, nomeBarbeiro: 'Lucas' }\r\n  ]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState('');\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      // Simular serviços disponíveis\r\n      const servicosDisponiveis = [\r\n        { id: 1, nomeServico: 'Corte de Cabelo' },\r\n        { id: 2, nomeServico: 'Barba' },\r\n        { id: 3, nomeServico: 'Corte + Barba' }\r\n      ];\r\n      setServicos(servicosDisponiveis);\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length) {\r\n      // Simular horários disponíveis\r\n      const horariosDisponiveis = [\r\n        '09:00', '10:00', '11:00', '14:00', '15:00'\r\n      ];\r\n      setHorarios(horariosDisponiveis);\r\n    }\r\n  }, [selectedBarbeiroId, selectedServicos]);\r\n\r\n  const handleCreateAtendimento = () => {\r\n    const atendimentoData = {\r\n      clienteId,\r\n      barbeiroId: selectedBarbeiroId,\r\n      servicos: selectedServicos,\r\n      horario: selectedHorario\r\n    };\r\n\r\n    console.log(\"Atendimento criado com sucesso!\", atendimentoData);\r\n    // Simular o envio dos dados\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.title}>Criar Atendimento</p>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <BarbeiroSelector \r\n          barbeiros={barbeiros} \r\n          selectedBarbeiroId={selectedBarbeiroId} \r\n          onSelect={setSelectedBarbeiroId} \r\n        />\r\n      </div>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <ServicoSelector \r\n          servicos={servicos} \r\n          selectedServicos={selectedServicos} \r\n          onSelect={setSelectedServicos} \r\n        />\r\n      </div>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <HorarioSelector \r\n          horarios={horarios} \r\n          selectedHorario={selectedHorario} \r\n          onSelect={setSelectedHorario} \r\n        />\r\n      </div>\r\n      {barbeiros.length > 0 && servicos.length > 0 && horarios.length > 0 && (\r\n  <button className={styles.button} onClick={handleCreateAtendimento}>Criar Agendamento</button>\r\n)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAtendimento;*/\n\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = () => {\r\n  const [barbeiros, setBarbeiros] = useState([]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Simulação para carregar barbeiros\r\n    setBarbeiros([\r\n      { id: 1, nomeBarbeiro: 'João' },\r\n      { id: 2, nomeBarbeiro: 'Pedro' },\r\n      { id: 3, nomeBarbeiro: 'Lucas' }\r\n    ]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      // Simulação para carregar serviços com base no barbeiro selecionado\r\n      setServicos([\r\n        { id: 1, nomeServico: 'Corte de Cabelo' },\r\n        { id: 2, nomeServico: 'Barba' },\r\n        { id: 3, nomeServico: 'Corte + Barba' }\r\n      ]);\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length > 0) {\r\n      // Simulação para carregar horários com base no barbeiro e serviços selecionados\r\n      setHorarios(['09:00', '10:00', '11:00', '14:00', '15:00']);\r\n    }\r\n  }, [selectedBarbeiroId, selectedServicos]);\r\n\r\n  const handleCreateAtendimento = () => {\r\n    // Criação do atendimento\r\n    console.log(\"Atendimento criado com sucesso!\");\r\n  };\r\n\r\n  const showButton = selectedBarbeiroId !== null && \r\n                      selectedServicos.length > 0 && \r\n                      selectedHorario !== '';\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.title}>Criar Atendimento</p>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <BarbeiroSelector \r\n          barbeiros={barbeiros} \r\n          selectedBarbeiroId={selectedBarbeiroId} \r\n          onSelect={setSelectedBarbeiroId} \r\n        />\r\n      </div>\r\n      \r\n      {selectedBarbeiroId && (\r\n        <div className={styles.selectorContainer}>\r\n          <ServicoSelector \r\n            servicos={servicos} \r\n            selectedServicos={selectedServicos} \r\n            onSelect={setSelectedServicos} \r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {selectedServicos.length > 0 && (\r\n        <div className={styles.selectorContainer}>\r\n          <HorarioSelector \r\n            horarios={horarios} \r\n            selectedHorario={selectedHorario} \r\n            onSelect={setSelectedHorario} \r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {showButton && (\r\n        <button className={styles.button} onClick={handleCreateAtendimento}>\r\n          Criar Agendamento\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAtendimento;\r\n*/\n\n// src/components/atendimentos/createAtend/CreateAtendimento.jsx\nimport React, { useState, useEffect } from 'react';\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\nimport ServicoSelector from './selectors/ServicoSelector';\nimport HorarioSelector from './selectors/HorarioSelector';\nimport styles from './CreateAtendimento.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateAtendimento = ({\n  modo,\n  atendimento\n}) => {\n  _s();\n  const [barbeiros, setBarbeiros] = useState([]);\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\n  const [servicos, setServicos] = useState([]);\n  const [selectedServicos, setSelectedServicos] = useState([]);\n  const [horarios, setHorarios] = useState([]);\n  const [selectedHorario, setSelectedHorario] = useState('');\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\n\n  useEffect(() => {\n    // Simular carregamento de barbeiros\n    setBarbeiros([{\n      id: 1,\n      nomeBarbeiro: 'João'\n    }, {\n      id: 2,\n      nomeBarbeiro: 'Pedro'\n    }, {\n      id: 3,\n      nomeBarbeiro: 'Lucas'\n    }]);\n  }, []);\n  useEffect(() => {\n    if (selectedBarbeiroId) {\n      // Simular serviços disponíveis\n      setServicos([{\n        id: 1,\n        nomeServico: 'Corte de Cabelo'\n      }, {\n        id: 2,\n        nomeServico: 'Barba'\n      }, {\n        id: 3,\n        nomeServico: 'Corte + Barba'\n      }]);\n    }\n  }, [selectedBarbeiroId]);\n  useEffect(() => {\n    if (selectedBarbeiroId && selectedServicos.length) {\n      // Simular horários disponíveis\n      setHorarios(['09:00', '10:00', '11:00', '14:00', '15:00']);\n    }\n  }, [selectedBarbeiroId, selectedServicos]);\n  const handleCreateAtendimento = () => {\n    const atendimentoData = {\n      clienteId,\n      barbeiroId: selectedBarbeiroId,\n      servicos: selectedServicos,\n      horario: selectedHorario\n    };\n    if (modo === 'atualizar') {\n      // Atualizar atendimento\n      console.log(\"Atendimento atualizado com sucesso!\", atendimentoData);\n    } else {\n      // Criar novo atendimento\n      console.log(\"Atendimento criado com sucesso!\", atendimentoData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.title,\n      children: modo === 'atualizar' ? 'Atualizar Atendimento' : 'Criar Atendimento'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectorContainer,\n      children: /*#__PURE__*/_jsxDEV(BarbeiroSelector, {\n        barbeiros: barbeiros,\n        selectedBarbeiroId: selectedBarbeiroId,\n        onSelect: setSelectedBarbeiroId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectorContainer,\n      children: /*#__PURE__*/_jsxDEV(ServicoSelector, {\n        servicos: servicos,\n        selectedServicos: selectedServicos,\n        onSelect: setSelectedServicos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.selectorContainer,\n      children: /*#__PURE__*/_jsxDEV(HorarioSelector, {\n        horarios: horarios,\n        selectedHorario: selectedHorario,\n        onSelect: setSelectedHorario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: handleCreateAtendimento,\n      children: modo === 'atualizar' ? 'Atualizar Agendamento' : 'Criar Agendamento'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateAtendimento, \"7+V2QgeNsH0eKE2h5vt4ZyEnW7Y=\");\n_c = CreateAtendimento;\nexport default CreateAtendimento;\nvar _c;\n$RefreshReg$(_c, \"CreateAtendimento\");","map":{"version":3,"names":["React","useState","useEffect","BarbeiroSelector","ServicoSelector","HorarioSelector","styles","jsxDEV","_jsxDEV","CreateAtendimento","modo","atendimento","_s","barbeiros","setBarbeiros","selectedBarbeiroId","setSelectedBarbeiroId","servicos","setServicos","selectedServicos","setSelectedServicos","horarios","setHorarios","selectedHorario","setSelectedHorario","clienteId","id","nomeBarbeiro","nomeServico","length","handleCreateAtendimento","atendimentoData","barbeiroId","horario","console","log","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","selectorContainer","onSelect","button","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lucas/Documents/estudos/react/crud/backend/frontend/src/components/atendimentos/createAtend/CreateAtendimento.jsx"],"sourcesContent":["/* src/components/CreateAtendimento.js */\r\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = () => {\r\n  const [barbeiros, setBarbeiros] = useState([]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState('');\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n    axios.get('/atendimento/barbeiros-disponiveis')\r\n      .then(response => setBarbeiros(response.data))\r\n      .catch(error => console.error(\"Erro ao buscar barbeiros:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      axios.get(`/atendimento/buscarPorIdBarbeiro?barbeiroId=${selectedBarbeiroId}`)\r\n        .then(response => setServicos(response.data))\r\n        .catch(error => console.error(\"Erro ao buscar serviços:\", error));\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length) {\r\n      const duracaoServico = 20; // Calcule a duração total dos serviços selecionados\r\n      axios.get(`/atendimento/horarios-disponiveis?barbeiroId=${selectedBarbeiroId}&data=${1 /* Data selecionada *//*}&duracaoServico=${duracaoServico}`)\r\n        .then(response => setHorarios(response.data))\r\n        .catch(error => console.error(\"Erro ao buscar horários:\", error));\r\n    }\r\n  }, [selectedBarbeiroId, selectedServicos]);\r\n\r\n  const handleCreateAtendimento = () => {\r\n    const atendimentoData = {\r\n      clienteId,\r\n      barbeiroId: selectedBarbeiroId,\r\n      servicos: selectedServicos,\r\n      horario: selectedHorario\r\n    };\r\n\r\n    axios.post('/atendimento/criar', atendimentoData)\r\n      .then(response => {\r\n        console.log(\"Atendimento criado com sucesso!\");\r\n      })\r\n      .catch(error => console.error(\"Erro ao criar atendimento:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.title}>Criar Atendimento</p>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <BarbeiroSelector \r\n          barbeiros={barbeiros} \r\n          selectedBarbeiroId={selectedBarbeiroId} \r\n          onSelect={setSelectedBarbeiroId} \r\n        />\r\n        <div className={styles.box}>\r\n          {/* Aqui você pode adicionar qualquer conteúdo adicional relacionado aos barbeiros *//*}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <ServicoSelector \r\n          servicos={servicos} \r\n          selectedServicos={selectedServicos} \r\n          onSelect={setSelectedServicos} \r\n        />\r\n        <div className={styles.box}>\r\n          {/* Aqui você pode adicionar qualquer conteúdo adicional relacionado aos serviços *//*}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <HorarioSelector \r\n          horarios={horarios} \r\n          selectedHorario={selectedHorario} \r\n          onSelect={setSelectedHorario} \r\n        />\r\n        <div className={styles.box}>\r\n          {/* Aqui você pode adicionar qualquer conteúdo adicional relacionado aos horários *//*}\r\n        </div>\r\n      </div>\r\n      \r\n      <button className={styles.button} onClick={handleCreateAtendimento}>Criar Agendamento</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAtendimento;*/\r\n\r\n// src/components/CreateAtendimento.js\r\n/*import React, { useState, useEffect } from 'react';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = () => {\r\n  const [barbeiros, setBarbeiros] = useState([\r\n    { id: 1, nomeBarbeiro: 'João' },\r\n    { id: 2, nomeBarbeiro: 'Pedro' },\r\n    { id: 3, nomeBarbeiro: 'Lucas' }\r\n  ]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState('');\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      // Simular serviços disponíveis\r\n      const servicosDisponiveis = [\r\n        { id: 1, nomeServico: 'Corte de Cabelo' },\r\n        { id: 2, nomeServico: 'Barba' },\r\n        { id: 3, nomeServico: 'Corte + Barba' }\r\n      ];\r\n      setServicos(servicosDisponiveis);\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length) {\r\n      // Simular horários disponíveis\r\n      const horariosDisponiveis = [\r\n        '09:00', '10:00', '11:00', '14:00', '15:00'\r\n      ];\r\n      setHorarios(horariosDisponiveis);\r\n    }\r\n  }, [selectedBarbeiroId, selectedServicos]);\r\n\r\n  const handleCreateAtendimento = () => {\r\n    const atendimentoData = {\r\n      clienteId,\r\n      barbeiroId: selectedBarbeiroId,\r\n      servicos: selectedServicos,\r\n      horario: selectedHorario\r\n    };\r\n\r\n    console.log(\"Atendimento criado com sucesso!\", atendimentoData);\r\n    // Simular o envio dos dados\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.title}>Criar Atendimento</p>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <BarbeiroSelector \r\n          barbeiros={barbeiros} \r\n          selectedBarbeiroId={selectedBarbeiroId} \r\n          onSelect={setSelectedBarbeiroId} \r\n        />\r\n      </div>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <ServicoSelector \r\n          servicos={servicos} \r\n          selectedServicos={selectedServicos} \r\n          onSelect={setSelectedServicos} \r\n        />\r\n      </div>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <HorarioSelector \r\n          horarios={horarios} \r\n          selectedHorario={selectedHorario} \r\n          onSelect={setSelectedHorario} \r\n        />\r\n      </div>\r\n      {barbeiros.length > 0 && servicos.length > 0 && horarios.length > 0 && (\r\n  <button className={styles.button} onClick={handleCreateAtendimento}>Criar Agendamento</button>\r\n)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAtendimento;*/\r\n\r\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = () => {\r\n  const [barbeiros, setBarbeiros] = useState([]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Simulação para carregar barbeiros\r\n    setBarbeiros([\r\n      { id: 1, nomeBarbeiro: 'João' },\r\n      { id: 2, nomeBarbeiro: 'Pedro' },\r\n      { id: 3, nomeBarbeiro: 'Lucas' }\r\n    ]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      // Simulação para carregar serviços com base no barbeiro selecionado\r\n      setServicos([\r\n        { id: 1, nomeServico: 'Corte de Cabelo' },\r\n        { id: 2, nomeServico: 'Barba' },\r\n        { id: 3, nomeServico: 'Corte + Barba' }\r\n      ]);\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length > 0) {\r\n      // Simulação para carregar horários com base no barbeiro e serviços selecionados\r\n      setHorarios(['09:00', '10:00', '11:00', '14:00', '15:00']);\r\n    }\r\n  }, [selectedBarbeiroId, selectedServicos]);\r\n\r\n  const handleCreateAtendimento = () => {\r\n    // Criação do atendimento\r\n    console.log(\"Atendimento criado com sucesso!\");\r\n  };\r\n\r\n  const showButton = selectedBarbeiroId !== null && \r\n                      selectedServicos.length > 0 && \r\n                      selectedHorario !== '';\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.title}>Criar Atendimento</p>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <BarbeiroSelector \r\n          barbeiros={barbeiros} \r\n          selectedBarbeiroId={selectedBarbeiroId} \r\n          onSelect={setSelectedBarbeiroId} \r\n        />\r\n      </div>\r\n      \r\n      {selectedBarbeiroId && (\r\n        <div className={styles.selectorContainer}>\r\n          <ServicoSelector \r\n            servicos={servicos} \r\n            selectedServicos={selectedServicos} \r\n            onSelect={setSelectedServicos} \r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {selectedServicos.length > 0 && (\r\n        <div className={styles.selectorContainer}>\r\n          <HorarioSelector \r\n            horarios={horarios} \r\n            selectedHorario={selectedHorario} \r\n            onSelect={setSelectedHorario} \r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {showButton && (\r\n        <button className={styles.button} onClick={handleCreateAtendimento}>\r\n          Criar Agendamento\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAtendimento;\r\n*/\r\n\r\n// src/components/atendimentos/createAtend/CreateAtendimento.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport BarbeiroSelector from './selectors/BarbeiroSelector';\r\nimport ServicoSelector from './selectors/ServicoSelector';\r\nimport HorarioSelector from './selectors/HorarioSelector';\r\nimport styles from './CreateAtendimento.module.css';\r\n\r\nconst CreateAtendimento = ({ modo, atendimento }) => {\r\n  const [barbeiros, setBarbeiros] = useState([]);\r\n  const [selectedBarbeiroId, setSelectedBarbeiroId] = useState(null);\r\n  const [servicos, setServicos] = useState([]);\r\n  const [selectedServicos, setSelectedServicos] = useState([]);\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [selectedHorario, setSelectedHorario] = useState('');\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n    // Simular carregamento de barbeiros\r\n    setBarbeiros([{ id: 1, nomeBarbeiro: 'João' }, { id: 2, nomeBarbeiro: 'Pedro' }, { id: 3, nomeBarbeiro: 'Lucas' }]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId) {\r\n      // Simular serviços disponíveis\r\n      setServicos([{ id: 1, nomeServico: 'Corte de Cabelo' }, { id: 2, nomeServico: 'Barba' }, { id: 3, nomeServico: 'Corte + Barba' }]);\r\n    }\r\n  }, [selectedBarbeiroId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedBarbeiroId && selectedServicos.length) {\r\n      // Simular horários disponíveis\r\n      setHorarios(['09:00', '10:00', '11:00', '14:00', '15:00']);\r\n    }\r\n  }, [selectedBarbeiroId, selectedServicos]);\r\n\r\n  const handleCreateAtendimento = () => {\r\n    const atendimentoData = {\r\n      clienteId,\r\n      barbeiroId: selectedBarbeiroId,\r\n      servicos: selectedServicos,\r\n      horario: selectedHorario\r\n    };\r\n\r\n    if (modo === 'atualizar') {\r\n      // Atualizar atendimento\r\n      console.log(\"Atendimento atualizado com sucesso!\", atendimentoData);\r\n    } else {\r\n      // Criar novo atendimento\r\n      console.log(\"Atendimento criado com sucesso!\", atendimentoData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p className={styles.title}>{modo === 'atualizar' ? 'Atualizar Atendimento' : 'Criar Atendimento'}</p>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <BarbeiroSelector \r\n          barbeiros={barbeiros} \r\n          selectedBarbeiroId={selectedBarbeiroId} \r\n          onSelect={setSelectedBarbeiroId} \r\n        />\r\n      </div>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <ServicoSelector \r\n          servicos={servicos} \r\n          selectedServicos={selectedServicos} \r\n          onSelect={setSelectedServicos} \r\n        />\r\n      </div>\r\n      \r\n      <div className={styles.selectorContainer}>\r\n        <HorarioSelector \r\n          horarios={horarios} \r\n          selectedHorario={selectedHorario} \r\n          onSelect={setSelectedHorario} \r\n        />\r\n      </div>\r\n      \r\n      <button className={styles.button} onClick={handleCreateAtendimento}>\r\n        {modo === 'atualizar' ? 'Atualizar Agendamento' : 'Criar Agendamento'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAtendimento;\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mHAjCA,CAiCmH;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yMA5BmH,CAgCpB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8RAV+F,CAWD;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mXAV8F,CAWA;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}