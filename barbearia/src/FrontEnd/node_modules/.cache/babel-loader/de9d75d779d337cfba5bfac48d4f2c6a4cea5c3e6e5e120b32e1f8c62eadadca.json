{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\estudos\\\\react\\\\crud\\\\backend\\\\frontend\\\\src\\\\components\\\\atendimentos\\\\cancelar\\\\CancelarAtendimento.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport styles from '../AtendimentosList.module.css';\r\n\r\nconst CancelarAtendimento = () => {\r\n    const [showConfirmation, setShowConfirmation] = useState(true);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    const handleCancel = () => {\r\n        // Simulação da lógica de cancelamento\r\n        console.log(`Atendimento ${id} cancelado com sucesso`);\r\n        \r\n        // Redirecionar para a lista de atendimentos após o cancelamento\r\n        navigate('/atendimento');\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {showConfirmation && (\r\n                <div className={styles.confirmPopup}>\r\n                    <p1>Você tem certeza que deseja cancelar este atendimento?</p1>\r\n                    <button\r\n                        className={styles.confirmButton}\r\n                        onClick={handleCancel}\r\n                    >\r\n                        Sim\r\n                    </button>\r\n                    <button\r\n                        className={styles.confirmButton}\r\n                        onClick={() => navigate('/')}\r\n                    >\r\n                        Não\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CancelarAtendimento;*/\n\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styles from '../AtendimentosList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CancelarAtendimento = () => {\n  _s();\n  const [showConfirmation, setShowConfirmation] = useState(true);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const handleCancel = () => {\n    // Simulação da lógica de cancelamento\n    console.log(`Atendimento ${id} cancelado com sucesso`);\n\n    // Redirecionar para a lista de atendimentos após o cancelamento\n    navigate('/atendimento');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.confirmPopup,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Voc\\xEA tem certeza que deseja cancelar este atendimento?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.confirmButton,\n        onClick: handleCancel,\n        children: \"Sim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.confirmButton,\n        onClick: () => navigate('/atendimento'),\n        children: \"N\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(CancelarAtendimento, \"1qYyHIZmZyFyTLeR/xoFiYQPWxE=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CancelarAtendimento;\nexport default CancelarAtendimento;\nvar _c;\n$RefreshReg$(_c, \"CancelarAtendimento\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","styles","jsxDEV","_jsxDEV","CancelarAtendimento","_s","showConfirmation","setShowConfirmation","navigate","id","handleCancel","console","log","className","container","children","confirmPopup","fileName","_jsxFileName","lineNumber","columnNumber","confirmButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lucas/Documents/estudos/react/crud/backend/frontend/src/components/atendimentos/cancelar/CancelarAtendimento.jsx"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport styles from '../AtendimentosList.module.css';\r\n\r\nconst CancelarAtendimento = () => {\r\n    const [showConfirmation, setShowConfirmation] = useState(true);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    const handleCancel = () => {\r\n        // Simulação da lógica de cancelamento\r\n        console.log(`Atendimento ${id} cancelado com sucesso`);\r\n        \r\n        // Redirecionar para a lista de atendimentos após o cancelamento\r\n        navigate('/atendimento');\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {showConfirmation && (\r\n                <div className={styles.confirmPopup}>\r\n                    <p1>Você tem certeza que deseja cancelar este atendimento?</p1>\r\n                    <button\r\n                        className={styles.confirmButton}\r\n                        onClick={handleCancel}\r\n                    >\r\n                        Sim\r\n                    </button>\r\n                    <button\r\n                        className={styles.confirmButton}\r\n                        onClick={() => navigate('/')}\r\n                    >\r\n                        Não\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CancelarAtendimento;*/\r\n\r\nimport React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport styles from '../AtendimentosList.module.css';\r\n\r\nconst CancelarAtendimento = () => {\r\n    const [showConfirmation, setShowConfirmation] = useState(true);\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    const handleCancel = () => {\r\n        // Simulação da lógica de cancelamento\r\n        console.log(`Atendimento ${id} cancelado com sucesso`);\r\n        \r\n        // Redirecionar para a lista de atendimentos após o cancelamento\r\n        navigate('/atendimento');\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {showConfirmation && (\r\n                <div className={styles.confirmPopup}>\r\n                    <p>Você tem certeza que deseja cancelar este atendimento?</p>\r\n                    <button\r\n                        className={styles.confirmButton}\r\n                        onClick={handleCancel}\r\n                    >\r\n                        Sim\r\n                    </button>\r\n                    <button\r\n                        className={styles.confirmButton}\r\n                        onClick={() => navigate('/atendimento')}\r\n                    >\r\n                        Não\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CancelarAtendimento;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAE1B,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACvB;IACAC,OAAO,CAACC,GAAG,CAAC,eAAeH,EAAE,wBAAwB,CAAC;;IAEtD;IACAD,QAAQ,CAAC,cAAc,CAAC;EAC5B,CAAC;EAED,oBACIL,OAAA;IAAKU,SAAS,EAAEZ,MAAM,CAACa,SAAU;IAAAC,QAAA,EAC5BT,gBAAgB,iBACbH,OAAA;MAAKU,SAAS,EAAEZ,MAAM,CAACe,YAAa;MAAAD,QAAA,gBAChCZ,OAAA;QAAAY,QAAA,EAAG;MAAsD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7DjB,OAAA;QACIU,SAAS,EAAEZ,MAAM,CAACoB,aAAc;QAChCC,OAAO,EAAEZ,YAAa;QAAAK,QAAA,EACzB;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjB,OAAA;QACIU,SAAS,EAAEZ,MAAM,CAACoB,aAAc;QAChCC,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC,cAAc,CAAE;QAAAO,QAAA,EAC3C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CAlCID,mBAAmB;EAAA,QAEJJ,WAAW,EACbD,SAAS;AAAA;AAAAwB,EAAA,GAHtBnB,mBAAmB;AAoCzB,eAAeA,mBAAmB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}