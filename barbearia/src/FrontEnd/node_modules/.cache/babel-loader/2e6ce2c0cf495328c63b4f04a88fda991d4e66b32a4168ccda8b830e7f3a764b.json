{"ast":null,"code":"// src/components/AtendimentosList.js\n/*import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styles from './AtendimentosList.module.css';\r\n\r\nconst AtendimentoList = () => {\r\n  const [atendimentos, setAtendimentos] = useState([]);\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n\r\n    // Simular um atendimento fictício para testes\r\n    setAtendimentos([{\r\n      id: 1, barbeiroNome: 'João', horario: '2024-08-10T10:00'\r\n    },\r\n    { id: 2, barbeiroNome: 'Maria', horario: '2024-08-11T11:00' }]);\r\n\r\n    // Buscar atendimentos do cliente\r\n    /*axios.get(`/atendimento?clienteId=${clienteId}`)\r\n      .then(response => {\r\n        setAtendimentos(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar atendimentos:\", error);\r\n      });*/ /*\r\n            }, [clienteId]);\r\n            return (\r\n            <div className={styles.container}>\r\n            <div className={styles.main}>\r\n            <p>Meus</p>\r\n            <h1>Atendimentos</h1>\r\n            <div className={styles.box}>\r\n            <ul>\r\n             {atendimentos.map(atendimento => (\r\n               <li key={atendimento.id} className={styles.listItem}>\r\n                 {atendimento.barbeiroNome} - {atendimento.horario}\r\n                 <div className={styles.buttonContainer}>\r\n                   <Link to={`/atualizar-atendimento/${atendimento.id}`}>\r\n                     <button className={styles.buttonUpdate}>\r\n                       Atualizar\r\n                     </button>\r\n                   </Link>\r\n                   <Link to={`/atendimento/cancelar?id=${atendimento.id}`}>\r\n                     <button className={styles.buttonDelete}>\r\n                       Cancelar\r\n                     </button>\r\n                   </Link>\r\n                 </div>\r\n               </li>\r\n             ))}\r\n            </ul>\r\n            </div>\r\n            </div>\r\n            <div>\r\n            <Link to=\"/criar-atendimento\">\r\n            <div className={styles.buttonCreate}>\r\n             <button\r\n               onMouseDown={(e) => e.preventDefault()}\r\n               onFocus={(e) => e.target.style.outline = 'none'}\r\n             >\r\n               Criar Novo Atendimento\r\n             </button>\r\n            </div>\r\n            </Link>\r\n            </div>\r\n            </div>\r\n            );\r\n            };\r\n            export default AtendimentoList;*/\n\n/*import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styles from './AtendimentosList.module.css';\r\n\r\nconst AtendimentoList = () => {\r\n  const [atendimentos, setAtendimentos] = useState([]);\r\n  const [showConfirmPopup, setShowConfirmPopup] = useState(false);\r\n  const [currentAtendimentoId, setCurrentAtendimentoId] = useState(null);\r\n\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n    // Simular um atendimento fictício para testes\r\n    setAtendimentos([{\r\n      id: 1, barbeiroNome: 'João', horario: '2024-08-10T10:00'\r\n    },\r\n    { id: 2, barbeiroNome: 'Maria', horario: '2024-08-11T11:00' }]);\r\n\r\n    \r\n  }, [clienteId]);\r\n\r\n  const handleCancelClick = (id) => {\r\n    setCurrentAtendimentoId(id);\r\n    setShowConfirmPopup(true);\r\n  };\r\n\r\n  const handleConfirmCancel = () => {\r\n    axios.delete(`/atendimento/cancelar?id=${currentAtendimentoId}`)\r\n      .then(response => {\r\n        alert('Atendimento cancelado com sucesso');\r\n        setAtendimentos(atendimentos.filter(atendimento => atendimento.id !== currentAtendimentoId));\r\n        setShowConfirmPopup(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao cancelar atendimento:', error);\r\n        setShowConfirmPopup(false); // Fechar o pop-up mesmo se houver erro\r\n      });\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setShowConfirmPopup(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.main}>\r\n        <p>Meus</p>\r\n        <h1>Atendimentos</h1>\r\n        <div className={styles.box}>\r\n          <ul>\r\n            {atendimentos.map(atendimento => (\r\n              <li key={atendimento.id} className={styles.listItem}>\r\n                {atendimento.barbeiroNome} - {atendimento.horario}\r\n                <div className={styles.buttonContainer}>\r\n                  <Link to={`/atualizar-atendimento/${atendimento.id}`}>\r\n                    <button className={styles.buttonUpdate}>\r\n                      Atualizar\r\n                    </button>\r\n                  </Link>\r\n                  <button className={styles.buttonDelete} onClick={() => handleCancelClick(atendimento.id)}>\r\n                    Cancelar\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/criar-atendimento\">\r\n          <div className={styles.buttonCreate}>\r\n            <button\r\n              onMouseDown={(e) => e.preventDefault()}\r\n              onFocus={(e) => e.target.style.outline = 'none'}\r\n            >\r\n              Criar Novo Atendimento\r\n            </button>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n\r\n      {showConfirmPopup && (\r\n        <div className={styles.confirmPopup}>\r\n          <p>Você tem certeza?</p>\r\n          <Link to={`/atendimento/cancelar?id=${currentAtendimentoId}`}>\r\n            <button>Sim</button>\r\n          </Link>\r\n          <button onClick={handleClosePopup}>Não</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AtendimentoList;*/","map":{"version":3,"names":[],"sources":["C:/Users/Lucas/Documents/estudos/react/crud/backend/frontend/src/components/atendimentos/AtendimentosList.jsx"],"sourcesContent":["// src/components/AtendimentosList.js\r\n/*import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styles from './AtendimentosList.module.css';\r\n\r\nconst AtendimentoList = () => {\r\n  const [atendimentos, setAtendimentos] = useState([]);\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n\r\n    // Simular um atendimento fictício para testes\r\n    setAtendimentos([{\r\n      id: 1, barbeiroNome: 'João', horario: '2024-08-10T10:00'\r\n    },\r\n    { id: 2, barbeiroNome: 'Maria', horario: '2024-08-11T11:00' }]);\r\n\r\n    // Buscar atendimentos do cliente\r\n    /*axios.get(`/atendimento?clienteId=${clienteId}`)\r\n      .then(response => {\r\n        setAtendimentos(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar atendimentos:\", error);\r\n      });*//*\r\n  }, [clienteId]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.main}>\r\n        <p>Meus</p>\r\n        <h1>Atendimentos</h1>\r\n        <div className={styles.box}>\r\n          <ul>\r\n            {atendimentos.map(atendimento => (\r\n              <li key={atendimento.id} className={styles.listItem}>\r\n                {atendimento.barbeiroNome} - {atendimento.horario}\r\n                <div className={styles.buttonContainer}>\r\n                  <Link to={`/atualizar-atendimento/${atendimento.id}`}>\r\n                    <button className={styles.buttonUpdate}>\r\n                      Atualizar\r\n                    </button>\r\n                  </Link>\r\n                  <Link to={`/atendimento/cancelar?id=${atendimento.id}`}>\r\n                    <button className={styles.buttonDelete}>\r\n                      Cancelar\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/criar-atendimento\">\r\n          <div className={styles.buttonCreate}>\r\n            <button\r\n              onMouseDown={(e) => e.preventDefault()}\r\n              onFocus={(e) => e.target.style.outline = 'none'}\r\n            >\r\n              Criar Novo Atendimento\r\n            </button>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AtendimentoList;*/\r\n\r\n/*import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styles from './AtendimentosList.module.css';\r\n\r\nconst AtendimentoList = () => {\r\n  const [atendimentos, setAtendimentos] = useState([]);\r\n  const [showConfirmPopup, setShowConfirmPopup] = useState(false);\r\n  const [currentAtendimentoId, setCurrentAtendimentoId] = useState(null);\r\n\r\n  const clienteId = 1; // ID do cliente, pode vir do contexto ou props\r\n\r\n  useEffect(() => {\r\n    // Simular um atendimento fictício para testes\r\n    setAtendimentos([{\r\n      id: 1, barbeiroNome: 'João', horario: '2024-08-10T10:00'\r\n    },\r\n    { id: 2, barbeiroNome: 'Maria', horario: '2024-08-11T11:00' }]);\r\n\r\n    \r\n  }, [clienteId]);\r\n\r\n  const handleCancelClick = (id) => {\r\n    setCurrentAtendimentoId(id);\r\n    setShowConfirmPopup(true);\r\n  };\r\n\r\n  const handleConfirmCancel = () => {\r\n    axios.delete(`/atendimento/cancelar?id=${currentAtendimentoId}`)\r\n      .then(response => {\r\n        alert('Atendimento cancelado com sucesso');\r\n        setAtendimentos(atendimentos.filter(atendimento => atendimento.id !== currentAtendimentoId));\r\n        setShowConfirmPopup(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erro ao cancelar atendimento:', error);\r\n        setShowConfirmPopup(false); // Fechar o pop-up mesmo se houver erro\r\n      });\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setShowConfirmPopup(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.main}>\r\n        <p>Meus</p>\r\n        <h1>Atendimentos</h1>\r\n        <div className={styles.box}>\r\n          <ul>\r\n            {atendimentos.map(atendimento => (\r\n              <li key={atendimento.id} className={styles.listItem}>\r\n                {atendimento.barbeiroNome} - {atendimento.horario}\r\n                <div className={styles.buttonContainer}>\r\n                  <Link to={`/atualizar-atendimento/${atendimento.id}`}>\r\n                    <button className={styles.buttonUpdate}>\r\n                      Atualizar\r\n                    </button>\r\n                  </Link>\r\n                  <button className={styles.buttonDelete} onClick={() => handleCancelClick(atendimento.id)}>\r\n                    Cancelar\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/criar-atendimento\">\r\n          <div className={styles.buttonCreate}>\r\n            <button\r\n              onMouseDown={(e) => e.preventDefault()}\r\n              onFocus={(e) => e.target.style.outline = 'none'}\r\n            >\r\n              Criar Novo Atendimento\r\n            </button>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n\r\n      {showConfirmPopup && (\r\n        <div className={styles.confirmPopup}>\r\n          <p>Você tem certeza?</p>\r\n          <Link to={`/atendimento/cancelar?id=${currentAtendimentoId}`}>\r\n            <button>Sim</button>\r\n          </Link>\r\n          <button onClick={handleClosePopup}>Não</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AtendimentoList;*/\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAxBA,CAwignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}