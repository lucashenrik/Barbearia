{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\estudos\\\\react\\\\crud\\\\backend\\\\frontend\\\\src\\\\components\\\\atendimentos\\\\update\\\\AtualizarAtendimento.jsx\",\n  _s = $RefreshSig$();\n// src/components/AtualizarAtendimento.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Modal from '../../Modal.jsx';\nimport styles from './AtualizarAtendimento.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateAtendimento = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [atendimento, setAtendimento] = useState({});\n  const [horario, setHorario] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false); // Corrigido para isModalOpen\n\n  useEffect(() => {\n    axios.get(`/atendimento/${id}`).then(response => {\n      setAtendimento(response.data);\n      setHorario(response.data.horario);\n    }).catch(error => console.error('Erro ao buscar atendimento:', error));\n  }, [id]);\n  const handleSubmit = () => {\n    axios.put('/atendimento/atualizar', {\n      id,\n      horario\n    }).then(response => {\n      alert('Atendimento atualizado com sucesso');\n      setIsOpen(false); // Fecha o modal após a atualização\n    }).catch(error => console.error('Erro ao atualizar atendimento:', error));\n  };\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Atualizar Atendimento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Hor\\xE1rio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: horario,\n        onChange: e => setHorario(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Atualizar Atendimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateAtendimento, \"6i+K9wkCvsE8biIQwBGVWdMWk/g=\", false, function () {\n  return [useParams];\n});\n_c = UpdateAtendimento;\nexport default UpdateAtendimento;\nvar _c;\n$RefreshReg$(_c, \"UpdateAtendimento\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Modal","styles","jsxDEV","_jsxDEV","UpdateAtendimento","_s","id","atendimento","setAtendimento","horario","setHorario","isModalOpen","setIsModalOpen","get","then","response","data","catch","error","console","handleSubmit","put","alert","setIsOpen","handleClose","isOpen","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","className","formContainer","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lucas/Documents/estudos/react/crud/backend/frontend/src/components/atendimentos/update/AtualizarAtendimento.jsx"],"sourcesContent":["// src/components/AtualizarAtendimento.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Modal from '../../Modal.jsx';\r\nimport styles from './AtualizarAtendimento.module.css';\r\n\r\nconst UpdateAtendimento = () => {\r\n  const { id } = useParams();\r\n  const [atendimento, setAtendimento] = useState({});\r\n  const [horario, setHorario] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Corrigido para isModalOpen\r\n\r\n  useEffect(() => {\r\n    axios.get(`/atendimento/${id}`)\r\n      .then(response => {\r\n        setAtendimento(response.data);\r\n        setHorario(response.data.horario);\r\n      })\r\n      .catch(error => console.error('Erro ao buscar atendimento:', error));\r\n  }, [id]);\r\n\r\n  const handleSubmit = () => {\r\n    axios.put('/atendimento/atualizar', {\r\n      id,\r\n      horario\r\n    })\r\n      .then(response => {\r\n        alert('Atendimento atualizado com sucesso');\r\n        setIsOpen(false); // Fecha o modal após a atualização\r\n      })\r\n      .catch(error => console.error('Erro ao atualizar atendimento:', error));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={handleClose}>\r\n      <h2>Atualizar Atendimento</h2>\r\n      <div className={styles.formContainer}>\r\n        <label>Horário:</label>\r\n        <input\r\n          type=\"datetime-local\"\r\n          value={horario}\r\n          onChange={(e) => setHorario(e.target.value)}\r\n        />\r\n        <button onClick={handleSubmit}>Atualizar Atendimento</button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdateAtendimento;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}